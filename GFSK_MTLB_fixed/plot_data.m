% % 01
% EbN0 = 1:4;
% res_01 = [1.93696589474213e-05, 2.08814149664410e-06, 0, 0];
% % 11
% res_11 = [8.08420086370559e-05, 5.22176032851139e-06, 5.22200574107311e-07, 3.44397179700187e-05];
% % 00
% res_00 = [1.92477560757883e-05, 3.12854894771256e-06, 5.20159564147898e-07, 0];
% % 10
% res_10 = [4.86344187350240e-05, 6.80045782774545e-06, 1.03978260225352e-06, 0];
% figure(1)
% plot(EbN0, res_01, 'r-.o', 'LineWidth', 1);    title('不同算法组合下的误码率');    xlabel('Eb/N0');    ylabel('BER');
% hold on;
% plot(EbN0, res_11, 'b-.*', 'LineWidth', 1);
% plot(EbN0, res_00, 'Color', [0.5, 0, 0.5], 'Marker', '^', 'LineWidth', 1);
% plot(EbN0, res_10, 'k--s', 'LineWidth', 1);
% legend('不使用位同步算法+IQ差分解调算法','使用位同步算法+IQ差分解调算法','不使用位同步算法+相位差分解调','使用位同步算法+相位差分解调');
% 
% % 不使用位同步算法, 使用位同步算法]: [0, 1]
% % [相位差分解调, IQ差分解调算法
clf;
EbN0 = 8:13;
% none
res_None = [0.001645011697861,6.950468764697889e-04,2.902374670184697e-04,1.239983260225987e-04,2.094449186044685e-05,0];
% fitz
res_Fitz = [4.767418102567595e-04,1.048613732645443e-04,4.192234932845637e-05,0,0,0];
% Kay
res_Kay = [4.736393394310013e-04,1.153281610400503e-04,1.555895547545575e-05,0,0,0];
% LNR
res_LNR = [4.626140291602776e-04,1.829156758734224e-04,2.609685063206572e-05,1.050127853066111e-05,0,0];
figure(1)
grid on;
semilogy(EbN0, res_None, 'r--^', 'LineWidth', 1.5);
hold on;
semilogy(EbN0, res_Fitz, 'g-.o', 'LineWidth', 1.5);    title('不同频率估计算法的误码率');    xlabel('Eb/N0');    ylabel('BER');
semilogy(EbN0, res_Kay, 'b-.*', 'LineWidth', 1.5);
semilogy(EbN0, res_LNR, 'k--s', 'LineWidth', 1.5);
legend('不使用频率估计（此情况下不能位同步）', 'Fitz频率估计算法','Kay频率估计算法','LNR频率估计算法');


% fitz_VARF
EbN0 = 8:16;
VAR_Fitz = [3.373338179764154e-04,3.159044092653497e-04,2.441653696754519e-04,2.119844609505447e-04,1.974744556994584e-04,1.794201287902350e-04,1.665343286699255e-04,1.303754687283941e-04,1.179118767760252e-04];
% Kay
VAR_Kay = [4.294211003041516e-04,2.858362805479092e-04,2.794653124963553e-04,2.251890477437562e-04,2.025121183014735e-04,1.818924445633404e-04,1.442224861766383e-04,1.479800209987925e-04,1.223798980841585e-04];
% LNR
VAR_LNR = [3.230029309884955e-04,2.821485546599186e-04,2.367356102628310e-04,2.149304456502480e-04,1.940360517970398e-04,1.651846504433137e-04,1.737743535472035e-04,1.363288145720283e-04,1.264834144533932e-04];
figure(2)
hold on;
grid on;
semilogy(EbN0, VAR_Fitz, 'g-.o', 'LineWidth', 1.5);    title('不同频率估计算法的归一化频率偏移均方差');    xlabel('Eb/N0(dB)');    ylabel('归一化频率估计均方差');
semilogy(EbN0, VAR_Kay, 'b-.*', 'LineWidth', 1.5);
semilogy(EbN0, VAR_LNR, 'k--s', 'LineWidth', 1.5);
legend('Fitz频率估计算法','Kay频率估计算法','L&R频率估计算法');

figure(3);
bit_sync = [4.573804573804574e-04,1.149587454865629e-04,1.565231002008713e-05,5.238756319249810e-06,0,0];
without_bit_sync = [5.257708609700068e-04,1.880641925777332e-04,0,7.903139126861189e-06,7.727855829121652e-06,0];
semilogy(EbN0, bit_sync, 'r-o', 'LineWidth', 1);    title('是否使用位同步的误码率对比');    xlabel('Eb/N0^-^1(dB)');    ylabel('BER');
hold on;
grid on;
semilogy(EbN0, without_bit_sync, 'k-s', 'LineWidth', 1);
legend('使用位同步','不使用位同步');

% figure(4);
% res_float = [5.570513415653143e-04,1.154005939283901e-04,2.322269011642309e-05,0,0,0];
% res_fixed = [4.573804573804574e-04,1.149587454865629e-04,1.565231002008713e-05,5.238756319249810e-06,0,0];
% semilogy(EbN0, res_float, 'r-o', 'LineWidth', 1);    title('浮点与定点的误码率对比');    xlabel('Eb/N0^-^1(dB)');    ylabel('BER');
% hold on;
% grid on;
% semilogy(EbN0, res_fixed, 'k-s', 'LineWidth', 1);
% legend('浮点仿真最佳性能','定点仿真最佳性能');

figure(5);
EbN0 = 8:16;
res_fixed_bit_sync_freq = [0.0380634840099197,0.0191496079566384,0.00820898226218019,0.00256779180407066,0.000820567498209909,0.000167134992844533,1.04198686054569e-05,0,0];
res_fixed_only_fre = [0.0302081491267307,0.0150966152182615,0.00714713641571109,0.00283908878273417,0.000945351416209141,0.000260803797303289,6.34239414808433e-05,1.04547284122927e-05,0];
res_fixed_only_bit_sync =  [0.041002677452139,0.018997841745326,0.008862668046588,0.003427423530143,0.001102478765638,3.455913539326725e-04,8.441489922971404e-05,1.564814621627824e-05,0];
res_fixed_none = [0.031453796228454,0.017242822465891,0.008154044185252,0.003347082468539,0.001084002325106,4.752156748062582e-04,1.051779084321129e-04,3.125781445361341e-05,5.217518339576963e-06];

semilogy(EbN0, res_fixed_bit_sync_freq, 'r-o', 'LineWidth', 1);    title('是否使用位同步的误码率对比');    xlabel('Eb/N0^-^1(dB)');    ylabel('BER');
hold on;
grid on;
semilogy(EbN0, res_fixed_only_fre, 'b-^', 'LineWidth', 1);
semilogy(EbN0, res_fixed_only_bit_sync, 'g-*', 'LineWidth', 1);
semilogy(EbN0, res_fixed_none, 'k-s', 'LineWidth', 1);
legend('使用位同步+频率补偿', '仅频率补偿', '仅位同步', '不进行同步');

figure(6);
EbN0 = 8:16;
res = [0.0499640225423720,0.0257038969748410,0.0104366039507421,0.00409103195891294,0.00114001343029521,0.000215081967213115,6.28291988229997e-05,1.56515750701712e-05,1.23527942744522e-07];
semilogy(EbN0, res, 'r-*', 'LineWidth', 1);
grid on;
title('不同比特信噪比下误码率');    xlabel('Eb/N0^-^1(dB)');    ylabel('BER');

figure(7);
EbN0 = 10:16;
res_time_shift = [1.72500000000000,1.70400000000000,1.67600000000000,1.64000000000000,1.49000000000000,1.56400000000000,1.43100000000000];
res_bit_sync = [1.45300000000000,1.15000000000000,0.836000000000000,0.701000000000000,0.580000000000000,0.540000000000000,0.561000000000000];
plot(EbN0, res_time_shift, 'r-*', 'LineWidth', 1);
hold on;
plot(EbN0, res_bit_sync, 'b-^', 'LineWidth', 1);
grid on;
title('不同比特信噪比下定时误差');    xlabel('Eb/N0(dB)');    ylabel('定时误差(采样点数)');
legend('不使用位同步', '使用位同步');

figure(8);
EbN0 = 10:16;
frame_err = [0,0,0,0,0,0,0];
plot(EbN0, frame_err, 'r-s', 'LineWidth', 1);
grid on;
title('不同比特信噪比下帧同步错误率');    xlabel('Eb/N0(dB)');    ylabel('错误帧数');

figure(9);
EbN0 = 8:16;
res_fixed_bit_sync_freq = [0.0380634840099197,0.0191496079566384,0.00820898226218019,0.00256779180407066,0.000820567498209909,0.000167134992844533,1.04198686054569e-05,0,0];
res_fixed_only_fre = [0.0302081491267307,0.0150966152182615,0.00714713641571109,0.00283908878273417,0.000945351416209141,0.000260803797303289,6.34239414808433e-05,1.04547284122927e-05,0];
res_fixed_only_bit_sync =  [0.041002677452139,0.018997841745326,0.008862668046588,0.003427423530143,0.001102478765638,3.455913539326725e-04,8.441489922971404e-05,1.564814621627824e-05,0];
res_fixed_none = [0.031453796228454,0.017242822465891,0.008154044185252,0.003347082468539,0.001084002325106,4.752156748062582e-04,1.051779084321129e-04,3.125781445361341e-05,5.217518339576963e-06];

semilogy(EbN0, res_fixed_bit_sync_freq, 'r-o', 'LineWidth', 1);    title('是否使用位同步的误码率对比');    xlabel('Eb/N0(dB)');    ylabel('BER');
hold on;
grid on;
semilogy(EbN0, res_fixed_only_fre, 'b-^', 'LineWidth', 1);
semilogy(EbN0, res_fixed_only_bit_sync, 'g-*', 'LineWidth', 1);
semilogy(EbN0, res_fixed_none, 'k-s', 'LineWidth', 1);
legend('使用位同步+频率补偿', '仅频率补偿', '仅位同步', '不进行同步');

figure(9);
EbN0 = 8:16;
float_data = [0.015095434513260,0.008013102181034,0.003652161107429,0.001300732436241,4.629411672394583e-04,1.402896201268842e-04,3.047897712552767e-05,1.568086307470363e-05,0];
fixed_10 = [0.040318895038846,0.017272824804206,0.007349416839751,0.002776064157927,5.739030625554338e-04,1.049152809106646e-04,5.162889152769890e-05,0,0];
fixed_12 = [0.038986249662982,0.016882979845943,0.007661038148843,0.002686189824081,5.264266161297116e-04,1.032844453625284e-04,5.317734645041212e-05,5.271203415739814e-05,0];
fixed_14 = [0.040311956579017,0.016613216970717,0.008746672461564,0.002575964672484,9.469696969696970e-04,1.567070622649394e-04,4.979087831109341e-05,0,0];
fixed_16 = [0.036591503925911,0.022326196409500,0.007692694454221,0.002110275417997,9.230295882262449e-04,2.655055225148683e-04,5.076142131979695e-05,0,0];
semilogy(EbN0, float_data, 'r-o', 'LineWidth', 1);    title('不同小数位长度的定点仿真与浮点仿真结果对比');    xlabel('Eb/N0(dB)');    ylabel('BER');
hold on;
grid on;
semilogy(EbN0, fixed_10, 'b-^', 'LineWidth', 1);
semilogy(EbN0, fixed_12, 'g-*', 'LineWidth', 1);
semilogy(EbN0, fixed_14, 'k-s', 'LineWidth', 1);
semilogy(EbN0, fixed_16, 'm-p', 'LineWidth', 1);
legend('浮点仿真', '10位小数位', '12位小数位', '14位小数位', '16位小数位');
