% 01
EbN0 = 1:4;
res_01 = [1.93696589474213e-05, 2.08814149664410e-06, 0, 0];
% 11
res_11 = [8.08420086370559e-05, 5.22176032851139e-06, 5.22200574107311e-07, 3.44397179700187e-05];
% 00
res_00 = [1.92477560757883e-05, 3.12854894771256e-06, 5.20159564147898e-07, 0];
% 10
res_10 = [4.86344187350240e-05, 6.80045782774545e-06, 1.03978260225352e-06, 0];
figure(1)
plot(EbN0, res_01, 'r-.o', 'LineWidth', 1);    title('不同算法组合下的误码率');    xlabel('Eb/N0');    ylabel('BER');
hold on;
plot(EbN0, res_11, 'b-.*', 'LineWidth', 1);
plot(EbN0, res_00, 'Color', [0.5, 0, 0.5], 'Marker', '^', 'LineWidth', 1);
plot(EbN0, res_10, 'k--s', 'LineWidth', 1);
legend('不使用位同步算法+IQ差分解调算法','使用位同步算法+IQ差分解调算法','不使用位同步算法+相位差分解调','使用位同步算法+相位差分解调');

% 不使用位同步算法, 使用位同步算法]: [0, 1]
% [相位差分解调, IQ差分解调算法

% fitz
res_Fitz = [2.35321064215981e-05, 1.04744671769478e-06, 5.21340282451738e-07, 0];

% Kay
res_Kay = [2.39930107316564e-05, 5.74598264399824e-06, 0, 0];

% LNR
res_LNR = [2.48193478050161e-05, 3.65935866602785e-06, 0, 0];
figure(2)
plot(EbN0, res_Fitz, 'r-.o', 'LineWidth', 1);    title('不同算法组合下的误码率');    xlabel('Eb/N0');    ylabel('BER');
hold on;
plot(EbN0, res_Kay, 'b-.*', 'LineWidth', 1);
plot(EbN0, res_LNR, 'k--s', 'LineWidth', 1);
legend('Fitz频率估计算法','Kay频率估计算法','LNR频率估计算法');
